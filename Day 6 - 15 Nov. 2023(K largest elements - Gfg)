Happy Bhai Dooj ❤️

Problem Link :- { https://practice.geeksforgeeks.org/problems/k-largest-elements4206/1?utm_source=geeksforgeeks&utm_medium=article_practice_tab&utm_campaign=article_practice_tab }

Using sort function -
code in cpp-

vector<int> kLargest(int arr[], int n, int k) {
	    // code here
	    //sort function,for decreasing order
	   sort(arr,arr+n,greater<int>());
	
           //put k largest elements into a vector 
	   vector<int>result(arr,arr+k);
	   return result;
	}

Using Minheap :

vector<int> kLargestElements(int arr[], int n, int k) {
    // Create a min heap
    priority_queue<int, vector<int>, greater<int>> minHeap;

    // Insert the first k elements into the min heap
    for (int i = 0; i < k; ++i) {
        minHeap.push(arr[i]);
    }

    // Iterate through the remaining elements in the array
    for (int i = k; i < n; ++i) {
        // If the current element is larger than the smallest element in the heap,
        // replace the smallest element with the current element
        if (arr[i] > minHeap.top()) {
            minHeap.pop();
            minHeap.push(arr[i]);
        }
    }

    // Create a vector to store the k largest elements in decreasing order
    vector<int> result;
    while (!minHeap.empty()) {
        result.push_back(minHeap.top());
        minHeap.pop();
    }

    // Reverse the vector to get elements in decreasing order
    reverse(result.begin(), result.end());

    return result;
}
