Problem Statement
Send feedback
You have been given an array/list of integers 'ARR' of size 'N'. Your task is to find two things-
1. The number of elements that are occurring an Odd number of times.
2. The number of elements that are occurring Even a number of times.
For Example:
ARR = [2, 1, 2, 1, 5, 5, 2]
Output: 1 2
2 occurs three(odd) times.
1 occurs two(even) times.
5 occurs two(even) times.
So, the total 1 element is occurring an odd number of times and 2 elements are occurring an even number of times.
Detailed explanation (Input/output format, Notes, Images )
Constraints:
1 <= T <= 10^2
0 <= N <= 5 * 1013
1 <= ARR[i] <= 1019
Time Limit: 1 sec

Code in cpp :

#include <bits/stdc++.h> 
#include<unordered_map>
vector<int> countEvenOdd(vector<int> &arr, int n)
{
	unordered_map<int, int> frequencyTable;

    // Build frequency table
    for (int item : arr) {
        frequencyTable[item]++;
    }

    // Count odd and even frequencies
    int odd = 0, even = 0;

    for (const auto& pair : frequencyTable) {
        if (pair.second % 2 != 0) {
            odd++;
        } else {
            even++;
        }
    }

	vector<int>ans;
	ans.push_back(odd);
	ans.push_back(even);
	return ans;
}
